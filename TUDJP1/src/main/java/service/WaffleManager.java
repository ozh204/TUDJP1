package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.Waffle;

public class WaffleManager
{
    private Connection connection;
    private Statement statement;
    private PreparedStatement addWaffleStmt;
    private PreparedStatement deleteAllWafflesStmt;
    private PreparedStatement getAllWafflesStmt;
	private PreparedStatement ModifyTypeStmt;
	private PreparedStatement getWaffleByIdStmt;
	private PreparedStatement deleteWaffleStmt;

    private String url = "jdbc:hsqldb:hsql://localhost/workdb";
    private String createTableWaffle = "CREATE TABLE Waffle(id bigint GENERATED BY DEFAULT AS IDENTITY, type varchar(50), price DECIMAL(5,1), topping VARCHAR(20), sugar VARCHAR(20), cream VARCHAR(20), fruit VARCHAR(20))";

    public WaffleManager()
	{
        try
		{
            connection = DriverManager.getConnection(url);
            statement = connection.createStatement();

            ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
            boolean tableExists = false;
            while (rs.next())
			{
                if ("Waffle".equalsIgnoreCase(rs.getString("TABLE_NAME")))
				{
                    tableExists = true;
                    break;
                }
            }

            if (!tableExists)
                statement.executeUpdate(createTableWaffle);

            addWaffleStmt = connection.prepareStatement("INSERT INTO Waffle (type, price, topping, sugar, cream, fruit) VALUES (?, ?, ?, ?, ?, ?)");
            deleteAllWafflesStmt = connection.prepareStatement("DELETE FROM Waffle");
            getAllWafflesStmt = connection.prepareStatement("SELECT id, price, type, topping, sugar, cream, fruit FROM Waffle");
			ModifyTypeStmt = connection.prepareStatement("UPDATE Waffle SET type=? WHERE id=?");
			getWaffleByIdStmt = connection.prepareStatement("SELECT id, price, type, topping, sugar, cream, fruit FROM Waffle WHERE id=?");
			deleteWaffleStmt = connection.prepareStatement("DELETE FROM Waffle WHERE id=?");
        }
		catch (SQLException e)
		{
            e.printStackTrace();
        }
    }
    
    Connection getConnection() 
    {
        return connection;
    }
    
    void clearWaffles() 
    {
		try 
		{
			deleteAllWafflesStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
    }
    
    public int addWaffle(Waffle waffle)
    {
    	int count = 0;
    	
    	try 
    	{
			addWaffleStmt.setString(1, waffle.getType());
			addWaffleStmt.setDouble(2, waffle.getPrice());
			addWaffleStmt.setString(3, waffle.getTopping());
			addWaffleStmt.setString(4, waffle.getSugar());
			addWaffleStmt.setString(5, waffle.getCream());
			addWaffleStmt.setString(6, waffle.getFruit());
			
			count = addWaffleStmt.executeUpdate();
		} 
    	catch (SQLException e) 
    	{
			e.printStackTrace();
		}
    	
    	return count;
    }
    
    public List<Waffle> getAllWaffles() 
    {
		List<Waffle> waffles = new ArrayList<Waffle>();

		try 
		{
			ResultSet rs = getAllWafflesStmt.executeQuery();

			while (rs.next()) 
			{
				Waffle waffle = new Waffle();

				waffle.setId(rs.getInt("id"));
				waffle.setType(rs.getString("type"));
				waffle.setPrice(rs.getDouble("price"));
				waffle.setTopping(rs.getString("topping"));
				waffle.setSugar(rs.getString("sugar"));
				waffle.setCream(rs.getString("cream"));
				waffle.setFruit(rs.getString("fruit"));
				
				waffles.add(waffle);
			}

		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
		return waffles;
    }

	public void modifyType(Waffle waffle) throws SQLException
	{
		try
		{
			ModifyTypeStmt.setString(1, waffle.getType());
			ModifyTypeStmt.setInt(2, waffle.getId());
			ModifyTypeStmt.executeUpdate();
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
	}

	public Waffle getWaffleById(Integer id) throws SQLException
	{
		Waffle waffle = new Waffle();
		try
		{
			getWaffleByIdStmt.setInt(1, id);
			ResultSet rs = getWaffleByIdStmt.executeQuery();

			while(rs.next())
			{
				waffle.setId(rs.getInt("id"));
				waffle.setType(rs.getString("type"));
				waffle.setPrice(rs.getDouble("price"));
				waffle.setTopping(rs.getString("topping"));
				waffle.setSugar(rs.getString("sugar"));
				waffle.setCream(rs.getString("cream"));
				waffle.setFruit(rs.getString("fruit"));
			}
		}
		catch(SQLException e)
		{
			e.printStackTrace();
		}

		return waffle;
	}

	public int delete(Integer id) throws SQLException
	{
		int count = 0;

		try
		{
			deleteWaffleStmt.setInt(1, id);
			count = deleteWaffleStmt.executeUpdate();
		}
		catch(SQLException e)
		{
			e.printStackTrace();
		}

		return count;
	}
}
